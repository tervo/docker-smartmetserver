##################################################################
# smartmet-tools-grid : filesys2smartmet
##################################################################

# This is a configuration file for "filesys2smartmet" program.
# The program is used for synchronizing content information
# in the Redis database according to the information stored
# into the file system.

##################################################################


# Importing global configuration parameters. There should be
# an environment variable SMARTMET_ENV_FILE that points to
# the global configuration file. The idea is that you can easily
# change your environment by editing this file.

@ifdef SMARTMET_ENV_FILE
  @include "$(SMARTMET_ENV_FILE)"
@else
  @print "The environment variable 'SMARTMET_ENV_FILE' not defined!" @location
  @include "/etc/smartmet/engines/grid-engine/base.conf"
@endif



# This information is needed for initializing the grid-library.

smartmet.library.grid-files.configFile = "$(GRID_FILES_LIBRARY_CONFIG_FILE)"



smartmet :
{
tools :
{
grid :
{


filesys2smartmet :
{
  content-source :
  {
    # There might be different content sources that update information
    # in the content server. That's why they should have an unique identifier.

    source-id = 200


    # This file contains producer information that is needed when content information
    # is read from the filesys. Notice that this file might contain producer definitions
    # that are not necessary used during the update.

    producerDefFile = "%(DIR)/producerDef.csv"

    directories =
    [
      "/data"
    ]

    patterns =
    [
      "*.grib",
      "*.grib1",
      "*.grib2"
    ]

    # This file is used for definingÂ which content should be preloaded into the memory
    # if possible. This means in practice that when new content entries are added into
    # the content server they can be marked with the "preload requested" flag. This is
    # how the data servers know which content should be preloaded.

    preloadFile = "$(GRID_TOOLS_CONFIG_DIR)/preload.csv"
  }


  # The "addFileInfoListWithContent" message can contain max this many records:

  maxMessageSize = 5000

  content-storage  :
  {
    # Content storage type (redis/corba/http)

    type = "redis"

    redis :
    {
      address      = "$(REDIS_CONTENT_SERVER_ADDRESS)"
      port         = $(REDIS_CONTENT_SERVER_PORT)
      tablePrefix  = "a."
    }

    corba :
    {
      ior          = "$(CORBA_CONTENT_SERVER_IOR)"
    }

    http :
    {
      url          = "$(HTTP_CONTENT_SERVER_URL)"
    }
  }

  debug-log :
  {
    enabled      = true
    file         = "/dev/stdout"
#    file         = "$(GRID_TOOLS_LOG_DIR)/filesys2smartmet_debug.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }

}


}
}
}
