# Importing global configuration parameters. There should be
# an environment variable SMARTMET_ENV_FILE that points to
# the global configuration file. The idea is that you can easily
# change your environment by editing this file. 

@ifdef SMARTMET_ENV_FILE
  @include "$(SMARTMET_ENV_FILE)"
@else
  @print "The environment variable 'SMARTMET_ENV_FILE' not defined!" @location
  @include "$(HOME)/workspace/smartmet-tools-grid/cfg/smartmet-dev-env.cfg"
@endif


smartmet :
{
tools :
{
grid :
{


content-server :
{ 
  # The address and the port where the CORBA server will be running.
  
  address = "$(CORBA_CONTENT_SERVER_ADDRESS)"
  port    = "$(CORBA_CONTENT_SERVER_PORT)"
   
  # Write the service IOR to the file
  
  iorFile = "/dev/stdout"
   
  cache :
  {
    enabled = false
    
    # Data sorting flags:
    # -------------------
    #  bit 0 (1)  : reserved 
    #  bit 1 (2)  : Sort by fmi-id (radonParameterId)
    #  bit 2 (4)  : Sort by fmi-name (radonParameterName)
    #  bit 3 (8)  : Sort by grib-id
    #  bit 4 (16) : Sort by newbase-id
    #  bit 5 (32) : Sort by newbase-name
    #  bit 6 (64) : Sort by cdm-id
    #  bit 7 (128): Sort by cdm-name

    # (1 + 2 + 4 + 32)
    contentSortingFlags = 5   
  }
  
  content-source  : 
  {
    # Content source type (redis/corba/http/memory)
    
    type = memory

    redis :
    {
      address      = "$(REDIS_CONTENT_SERVER_ADDRESS)"
      port         = $(REDIS_CONTENT_SERVER_PORT)
      tablePrefix  = "$(REDIS_CONTENT_SERVER_TABLE_PREFIX)"
    }
    
    corba :
    {
      ior          = ""
    }

    http :
    {
      url          = "$(HTTP_CONTENT_SERVER_URL)"
    }    

    memory :
    {
      contentLoadEnabled  = true;
      contentSaveEnabled  = true;
      contentDir          = "$(HOME)/Data"
      contentSaveInterval = 60
      
      # Content sorting flags:
      # ---------------------
      #  bit 0 (1)  : reserved 
      #  bit 1 (2)  : Sort by fmi-id (radonParameterId)
      #  bit 2 (4)  : Sort by fmi-name (radonParameterName)
      #  bit 3 (8)  : Sort by grib-id
      #  bit 4 (16) : Sort by newbase-id
      #  bit 5 (32) : Sort by newbase-name
      #  bit 6 (64) : Sort by cdm-id
      #  bit 7 (128): Sort by cdm-name

      # (1 + 2 + 4 + 32)
      contentSortingFlags = 5   
    }    
  }
  
  processing-log :
  {
    enabled      = true
    file         = "/dev/stdout"
#    file         = "$(GRID_TOOLS_LOG_DIR)/corbaContentServer_processing.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
  
  debug-log :
  {
    enabled      = true
    file         = "/dev/stdout"
#    file         = "$(GRID_TOOLS_LOG_DIR)/corbaContentServer_debug.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
}


}
}
}
